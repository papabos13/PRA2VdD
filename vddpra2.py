# -*- coding: utf-8 -*-
"""VdDPRA2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fNb7B037BPs7snlGgUWCXPgWi7yV0Sv3
"""

import streamlit as st
import pandas as pd
import plotly.express as px

@st.cache_data
def cargar_datos():
    url = "https://drive.google.com/file/d/1c3Ok49GNhWxgdDAxOPISMTDUd9SyWE2v/view?usp=sharing"
    df = pd.read_csv(url, parse_dates=["month"])
    return df


df = cargar_datos()

st.title("üåç Visualizaci√≥n clim√°tica por capitales")

variables_disponibles = [
    "temperature_2m_max", "temperature_2m_min", "temperature_2m_mean",
    "apparent_temperature_max", "apparent_temperature_min", "apparent_temperature_mean",
    "sunrise_avg_min", "sunset_avg_min", "daylight_duration", "sunshine_duration",
    "precipitation_sum", "rain_sum", "snowfall_sum", "precipitation_hours",
    "wind_speed_10m_max", "wind_gusts_10m_max", "wind_direction_10m_dominant",
    "shortwave_radiation_sum", "et0_fao_evapotranspiration"
]

variable = st.selectbox("üìä Variable clim√°tica:", variables_disponibles)
meses = sorted(df["month"].dt.to_period("M").astype(str).unique())
mes = st.selectbox("üìÖ Mes:", meses)

fecha_dt = pd.to_datetime(mes)
df_mes = df[df["month"] == fecha_dt].copy()

if df_mes.empty:
    st.warning("No hay datos para esa combinaci√≥n.")
else:
    df_mes["rel_value"] = (df_mes[variable] - df_mes[variable].mean()) / df_mes[variable].std()

    fig = px.scatter_mapbox(
        df_mes,
        lat="latitude",
        lon="longitude",
        size=df_mes[variable].abs(),
        color="rel_value",
        hover_name="city_name",
        hover_data=["country_name", variable],
        color_continuous_scale="RdBu_r",
        size_max=15,
        zoom=1
    )

    fig.update_layout(mapbox_style="carto-positron")
    fig.update_layout(title=f"{variable} ‚Äî {fecha_dt.strftime('%B %Y')}")
    st.plotly_chart(fig, use_container_width=True)
